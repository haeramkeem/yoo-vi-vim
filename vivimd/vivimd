#!/bin/bash

panic() {
    echo "[ERROR $(date -I seconds)] $@" 1>&2
    exit 1
}

logging() {
    echo "[INFO $(date -I seconds)] $@"
}

#########################
# Initiating synchronization
#########################
logging "Starting synchronization"

CONFIG_PATH=/etc/vivimd
if [[ -f $CONFIG_PATH/config.yaml ]]; then
    logging "Configuration file $CONFIG_PATH/config.yaml found"
else
    panic "Configuration file $CONFIG_PATH/config.yaml not found"
fi

GIT_REPO_TYPE=$(yq '.source.git.type' $CONFIG_PATH/config.yaml)
case $GIT_REPO_TYPE in
    github)
        GIT_REPO_URL_PREFIX='https://raw.githubusercontent.com'
        logging "Successfully configured: GIT_REPO_URL_PREFIX is set to $GIT_REPO_URL_PREFIX"
        ;;
    *)
        panic "Misconfigured: unsupported git repository type $GIT_REPO_TYPE"
        ;;
esac

GIT_REPO_USERNAME=$(yq '.source.git.username' $CONFIG_PATH/config.yaml)
if [[ $GIT_REPO_USERNAME != 'null' ]]; then
    logging "Successfully configured: GIT_REPO_USERNAME is set to $GIT_REPO_USERNAME"
else
    panic "Misconfigured: .source.git.username must be provided"
fi

GIT_REPO_NAME=$(yq '.source.git.reponame' $CONFIG_PATH/config.yaml)
if [[ $GIT_REPO_NAME != 'null' ]]; then
    logging "Successfully configured: GIT_REPO_NAME is set to $GIT_REPO_NAME"
else
    panic "Misconfigured: .source.git.reponame must be provided"
fi

GIT_REPO_BRANCH=$(yq '.source.git.branch' $CONFIG_PATH/config.yaml)
if [[ $GIT_REPO_NAME != 'null' ]]; then
    logging "Successfully configured: GIT_REPO_BRANCH is set to $GIT_REPO_BRANCH"
else
    panic "Misconfigured: .source.git.reponame must be provided"
fi

GIT_REPO_URL="$GIT_REPO_URL_PREFIX/$GIT_REPO_USERNAME/$GIT_REPO_NAME/$GIT_REPO_BRANCH"

#########################
# Sync brew formulae
#########################
sync_brew() {
    logging "Starting brew formulae synchronization"

    if ! `brew --version &> /dev/null`; then
        logging "Skipping brew formulae synchronization: brew is not installed"
        exit 0
    fi

    local BREW_FORMULAE_LIST_PATH=$(yq '.sync.subject.brew.path' $CONFIG_PATH/config.yaml)
    if [[ $BREW_FORMULAE_LIST_PATH != 'null' ]]; then
        logging "Brew formulae synchronization: BREW_FORMULAE_LIST_PATH is set to $BREW_FORMULAE_LIST_PATH"
    else
        logging "Skipping brew formulae synchronization: .sync.subject.brew.path is not defined in $CONFIG_PATH/config.yaml"
        exit 0
    fi

    local BREW_FORMULAE_LIST=$(curl -s $GIT_REPO_URL/$BREW_FORMULAE_LIST_PATH || echo 'null')
    if [[ $BREW_FORMULAE_LIST != 'null' ]]; then
        logging "Brew formulae synchronization: synchronizing formulas '"$BREW_FORMULAE_LIST"'"
    else
        logging "Skipping brew formulae synchronization: brew formulae list file not found in GIT_REPO_URL/$BREW_FORMULAE_LIST_PATH"
        exit 0
    fi

    for f in $(echo $BREW_FORMULAE_LIST); do
        if `yq '.sync.subject.brew.exclude' $CONFIG_PATH/config.yaml | grep $f &> /dev/null`; then
            logging "Brew formulae synchronization: formulae '$f' is excluded from synchronization"
        elif `brew leaves | grep $f &> /dev/null`; then
            logging "Brew formulae synchronization: formulae '$f' is already installed"
        else
            logging "Brew formulae synchronization: formulae '$f' is not installed. installing $f"
            brew install $f
        fi
    done
    
    logging "All brew formulae synchronized"
}

if [[ $(yq '.sync.subject.brew.enabled' $CONFIG_PATH/config.yaml) == 'true' ]]; then
    sync_brew
else
    logging "Skipping synchronization: .sync.subject.brew.enabled is not set to true"
fi
